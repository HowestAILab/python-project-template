name: Check Docker base Image

on:
  schedule:
    - cron: "0 0 * * 0" # Run every Sunday at midnight
  workflow_dispatch:

jobs:
  check-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: get config file from .devcontainer
        uses: actions/checkout@v3
      - name: List contents of .devcontainer directory
        run: |
          ls -la .devcontainer
      - name: Set environment variables
        run: |
          echo "DEFAULT_PYTHON_VERSION=$(awk -F "=" '/default_python_version/ {print $2}' .devcontainer/config.ini | tr -d ' ')" >> $GITHUB_ENV
          echo "CUDA=$(awk -F "=" '/default_cuda/ {print $2}' .devcontainer/config.ini | tr -d ' ')" >> $GITHUB_ENV
          echo "CUDNN=$(awk -F "=" '/default_cudnn/ {print $2}' .devcontainer/config.ini | tr -d ' ')" >> $GITHUB_ENV
          echo "GPU_AVAILABLE=$(awk -F "=" '/default_gpu_available/ {print $2}' .devcontainer/config.ini | tr -d ' ')" >> $GITHUB_ENV
          echo "UBUNTU_VERSION=$(awk -F "=" '/default_ubuntu_version/ {print $2}' .devcontainer/config.ini | tr -d ' ')" >> $GITHUB_ENV
      - name: Check Docker Image
        run: |
          if echo $(docker manifest inspect nvidia/cuda:${{ env.CUDA }}-${{ env.CUDNN }}-devel-ubuntu${{ env.UBUNTU_VERSION }} 2>&1) | grep -q "no such manifest"; then
              echo "Manifest does not exist"
          else
              echo "Manifest exists"
          fi
      - name: Notify User
        if: failure()
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Docker image does not exist',
              body: 'The Docker image does not exist, or another error occured. Please check the build process and try again.'
            })
