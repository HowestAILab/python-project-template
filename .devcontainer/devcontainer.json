{
  "build": {
    "args": {
      "PYTHON_VERSION": "3.10.11"
    },
    "dockerfile": "Dockerfile"
  },
  "extensions": [
    "adpyke.codesnap",
    "analytic-signal.preview-mp4",
    "anseki.vscode-color",
    "cweijan.vscode-office",
    "eamodio.gitlens",
    "esbenp.prettier-vscode",
    "formulahendry.code-runner",
    "GitHub.copilot",
    "GitHub.vscode-pull-request-github",
    "Gruntfuggly.todo-tree",
    "hancel.markdown-image",
    "hbenl.vscode-test-explorer",
    "IronGeek.vscode-env",
    "KevinRose.vsc-python-indent",
    "kleber-swf.unity-code-snippets",
    "maciejdems.add-to-gitignore",
    "magicstack.MagicPython",
    "magson.material-dark-color-theme",
    "mhutchie.git-graph",
    "mrmlnc.vscode-remark",
    "ms-azuretools.vscode-docker",
    "ms-python.isort",
    "ms-python.python",
    "ms-python.vscode-pylance",
    "ms-toolsai.jupyter",
    "ms-toolsai.jupyter-keymap",
    "ms-toolsai.jupyter-renderers",
    "ms-toolsai.vscode-jupyter-cell-tags",
    "ms-toolsai.vscode-jupyter-slideshow",
    "ms-vsliveshare.vsliveshare",
    "naumovs.color-highlight",
    "njpwerner.autodocstring",
    "PKief.markdown-checkbox",
    "PKief.material-icon-theme",
    "Postman.postman-for-vscode",
    "quicktype.quicktype",
    "RandomFractalsInc.vscode-data-preview",
    "ritwickdey.LiveServer",
    "ruiquelhas.vscode-lowercase",
    "Shinotatwu-DS.file-tree-generator",
    "sleistner.vscode-fileutils",
    "sourcery.sourcery",
    "streetsidesoftware.code-spell-checker",
    "swyphcosmo.spellchecker",
    "TakumiI.markdowntable",
    "tomoki1207.pdf",
    "tonybaloney.vscode-pets",
    "vidamrr.file-groups",
    "VisualStudioExptTeam.intellicode-api-usage-examples",
    "VisualStudioExptTeam.vscodeintellicode",
    "wix.vscode-import-cost",
    "yzane.markdown-pdf",
    "yzhang.markdown-all-in-one"
  ],
  "features": {
    "azure-cli": "latest",
    "github-cli": "latest"
  },
  "name": "template-python-project",
  "postStartCommand": "poetry config virtualenvs.create true && poetry config virtualenvs.in-project true && poetry install --with cleaning,utils && poetry run pre-commit install",
  "runArgs": [
    "--name",
    "template-python-project_devcontainer"
  ]
}
